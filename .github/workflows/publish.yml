name: "Publish"

on:
  workflow_dispatch:
  repository_dispatch:
    types: ["publish-website"]
  release:
    types: ["published"]

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: "Log trigger info"
        shell: bash
        run: |
          echo "Actor: $GITHUB_ACTOR"
          echo "Event: $GITHUB_EVENT_NAME"
          echo
          echo "Commit: $GITHUB_SHA"
          echo "Branch: $GITHUB_REF"

      - name: "Setup Node.js environment"
        uses: actions/setup-node@v1
        with:
          node-version: "12"

      - name: "Checkout branch: ${{ github.ref }}"
        uses: actions/checkout@v2
        with:
          path: "master"

      - name: "Checkout branch: gh-pages"
        uses: actions/checkout@v2
        with:
          ref: "gh-pages"
          path: "deploy"

      - name: "Cache Node.js packages"
        id: "cache"
        uses: actions/cache@v2
        with:
          # npm cache files are stored in `~/.npm` on Linux.
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('master/**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: "Install Node.js dependencies"
        shell: bash
        working-directory: "./master"
        run: npm ci

      - name: "Build website"
        shell: pwsh
        working-directory: "./master"
        run: |
          . './tools/build.ps1'

      - name: "Deploy website"
        shell: pwsh
        env:
          PERSONAL_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        working-directory: "./master"
        run: |
          Write-Output "::add-mask::$env:PERSONAL_ACCESS_TOKEN"
          . './tools/deploy.ps1'

      # Keep the cache clean.
      # This is regarded as a post-run step that we don't really pay attention to.
      # Run it last to save waiting time.
      - name: "Verify npm cache"
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        shell: bash
        run: |
          npm cache verify

      # If the run failed, npm log may help to diagnose.
      - name: "(debug) Upload npm log"
        if: ${{ !success() }}
        uses: actions/upload-artifact@v2
        with:
          name: "npm-debug-log"
          path: "~/.npm/_logs"
